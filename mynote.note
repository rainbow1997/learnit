How to call children relationship class example:
class Drawing extends Eloquent {
    public function user() {
        return $this->belongsTo('User', 'user_id');
    }

    // this throws the relation error above, also I beleive this does two queries, anyway to improve this?
    public function userLink() {
        return $this->user->link;
    }
}

class User extends Eloquent {
    public function link() {
        return $this->morphTo('User', 'type', 'id');
    }
}

class Retailer extends Eloquent {
    public function user() {
        return $this->belongsTo('User', 'id');
    }
}

class Manufacturer extends Eloquent {
    public function user() {
        return $this->belongsTo('User', 'id');
    }
}
3

Try this instead:

Drawing::first()->user->link;
or this:

// Drawing model
public function user()
{
    return $this->belongsTo('User', 'user_id');
}

// Drawing model
// Requires above relation
public function userLink()
{
    return $this->user->link;
}
Then:

$ulink = Drawing::first()->userLink();
Or newer::
Update: Just make changes to your method like this (Create an accessor):

public function getUserLinkAttribute()
{
    return $this->user->link;
}
/////////////////////////////////////////////////////////
foreign key behich vajh nmitune null bashe

////////
hale moshkel seed nashodan berkhatere cache
 composer dump-autoload
 ///////////////////////
 $lesson->qbanks[0]->questions[0]->questionable
dastresi sade o bi dardesar baraye relation haye morphi besoorate mostaghim
//////
https://stackoverflow.com/questions/49205427/laravel-polymorphic-database-seeder-factory

//////////
dar mored relationship ha tafavot asasie halat adi ba polymorphism dar ine ke dar halat adi ma bayad dar jadavel kelid khareji ra ba ame moshakhas
an jadval tarif konim masanaln dar jadvan comments ha dashte bashim post_id category_id
ama ba polymorphism digar lozoomi be tarif sabet kelid hayekhareji ba namemoshakhas jadval nadarim
yani bejaye post_id ya category_id minevisim commentable_type va commentable_id
hal baraye commente marboot be post drim :
commentable_type=post(namejadval) commentable_id=post_id(id record post dar jadvale khodesh)
////////
dar taeein hasOne belongsTo deghat kon ke class zirin hatman belongsTo bashe
////////////////////
learn method overriding specially in constructor overriding in php
zemnan yadet nare ravabet ham mostaghim ham makoos ta akharin classe zirin anjam bedi
 $student=new App\Users\Student
$student->id=1
 $learner=new App\Users\Learner;
$learner->id=1
 $learner->learnerable()->associate($student);
 $user=new App\Users\User
 $user->userable()->associate($learner);
 $user->save();
////////////////
roles and permission
https://www.itsolutionstuff.com/post/laravel-8-user-roles-and-permissions-tutorialexample.html
///////////////////
  public function learner()
    {
        return $this->morphOne(Learner::class,'learnerable');
    }
    public function user()
    {
       //return $this->hasManyThrough(User::class,Learner::class,null,'learnerable_id')->where('learnerable_type',User::class);
        return $this->learner->user();//ye rahe sadetar baraye hasManyThrough in Polymorphic ha
    }
    //////////////////////
    be in sabk relation ha deghat kon
    $teacher->lessons[0]->sessions[1]->exam->qbank->questions[0]->questionable->output
    age shey az  class asli yani farzando bekhay az classnameable() estefade mikoni
    classname::where(condition,value)
    baraye gereftan besoorat collection va dadan be query ha be soorat jami az maghadir field ha
    az pluck('fieldname1',...) estefade kon ke class ei az collection havi kolle maghadire field1 e
    vaghti esm class masalan Sessione dg baghie tavabe age ba in esm shoroo shan
    tabe ghavaed khasian pas moragheb bash
    (age mikhay mostaghim class begiri () yadet nare)3

    etimes you may want to count the number of related models for a given relationship without actually loading the models. To accomplish this, you may use the withCount method. The withCount method which will place a {relation}_count attribute on the resulting models:

    use App\Models\Post;

    $posts = Post::withCount('comments')->get();

    foreach ($posts as $post) {
        echo $post->comments_count;
    }
    ///////////////////////////////////
    baraye marboot kardn relation ha
    Belongs To Relationships
    If you would like to assign a child model to a new parent model, you may use the associate method. In this example, the User model defines a belongsTo relationship to the Account model. This associate method will set the foreign key on the child model:

    use App\Models\Account;

    $account = Account::find(10);

    $user->account()->associate($account);

    $user->save();
    To remove a parent model from a child model, you may use the dissociate method. This method will set the relationship's foreign key to null:

    $user->account()->dissociate();

    $user->save();
